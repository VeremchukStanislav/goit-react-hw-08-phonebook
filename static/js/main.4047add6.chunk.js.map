{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/PrivateRoute.js","components/PublicRoute.js","components/Container/Container.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.svg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","components/Loader/Loader.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-actions.js","components/Loader/Loader.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","connect","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","Container","children","className","styles","container","exact","link","activeClassName","activeLink","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","src","alt","width","button","type","onClick","AuthNav","style","header","HomeView","lazy","ContactsView","RegisterView","LoginView","App","this","onGetCurretnUser","fallback","Loader","path","initialState","items","contactsActions","fetchContactsSuccess","addContactSuccess","deleteContactSuccess","filter","id","changeFilter","onError","fetchContactsError","addContactError","deleteContactError","clearError","loading","fetchContactsRequest","addContactRequest","deleteContactRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","rootReducer","persistReducer","authReducer","contacts","contactsReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","module","exports","loader","color","height","timeout","getContactItems","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","getLoading","fetchContacts","addContact","number","deleteContact","contactId","delete"],"mappings":"wQAkBe,GACbA,gBAjBsBC,YAAa,wBAkBnCC,gBAjBsBD,YAAa,wBAkBnCE,cAjBoBF,YAAa,sBAkBjCG,aAhBmBH,YAAa,qBAiBhCI,aAhBmBJ,YAAa,qBAiBhCK,WAhBiBL,YAAa,mBAiB9BM,cAfoBN,YAAa,sBAgBjCO,cAfoBP,YAAa,sBAgBjCQ,YAfkBR,YAAa,oBAgB/BS,sBAd4BT,YAAa,8BAezCU,sBAd4BV,YAAa,8BAezCW,oBAd0BX,YAAa,6B,cCZnCY,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCC,EAAOC,YAAcJ,GAAD,mBACvBK,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBJ,QADnC,cAEvBE,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBJ,QAFhC,cAGvBE,EAAYV,eAAgB,kBAAMK,KAHX,cAIvBK,EAAYP,uBAAwB,SAACQ,EAAD,YAAMC,WAJnB,IAOpBC,EAAQJ,YAAc,MAAD,mBACxBC,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBC,SADlC,cAExBH,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBC,SAF/B,cAGxBH,EAAYV,eAAgB,kBAAM,QAHV,IAMrBc,EAAW,SAACH,EAAD,YAAMC,SAEjBG,EAAQN,YAAc,MAAD,mBACxBC,EAAYf,cAAgBmB,GADJ,cAExBJ,EAAYZ,WAAagB,GAFD,cAGxBJ,EAAYT,YAAca,GAHF,cAIxBJ,EAAYN,oBAAsBU,GAJV,IAOrBE,EAAkBP,aAAc,GAAD,mBAClCC,EAAYhB,iBAAkB,kBAAM,KADF,cAElCgB,EAAYb,cAAe,kBAAM,KAFC,cAGlCa,EAAYP,uBAAwB,kBAAM,KAHR,cAIlCO,EAAYf,eAAgB,kBAAM,KAJA,cAKlCe,EAAYZ,YAAa,kBAAM,KALG,cAMlCY,EAAYN,qBAAsB,kBAAM,KANN,cAOlCM,EAAYV,eAAgB,kBAAM,KAPA,IAUtBiB,cAAgB,CAC7BT,OACAQ,kBACAH,QACAE,U,yCCvCFG,IAAMC,SAASC,QAAU,wCAIzB,IAAMP,EAAQ,SACRA,GACFK,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDV,IAFtDA,EAAQ,WAKVK,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IA2DnC,GAAEC,SAvDA,SAAAC,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC9BD,EAAShB,EAAYlB,mBADS,kBAGL0B,IAAMU,KAAK,gBAAiBH,GAHvB,gBAGpBI,EAHoB,EAGpBA,KACRhB,EAAUgB,EAAKhB,OACfa,EAAShB,EAAYhB,gBAAgBmC,IALT,kDAO5BH,EAAShB,EAAYf,cAAc,KAAMmC,UAPb,0DAAJ,uDAuDDC,MA5Cb,SAAAN,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC3BD,EAAShB,EAAYd,gBADM,kBAGFsB,IAAMU,KAAK,eAAgBH,GAHzB,gBAGjBI,EAHiB,EAGjBA,KACRhB,EAAUgB,EAAKhB,OACfa,EAAShB,EAAYb,aAAagC,IALT,kDAOzBH,EAAShB,EAAYZ,WAAW,KAAMgC,UAPb,0DAAJ,uDA4CSE,OAjCnB,yDAAM,WAAMN,GAAN,SAAAC,EAAA,6DACnBD,EAAShB,EAAYX,iBADF,kBAGXmB,IAAMU,KAAK,iBAHA,OAIjBf,IACAa,EAAShB,EAAYV,iBALJ,gDAOjB0B,EAAShB,EAAYT,YAAY,KAAM6B,UAPtB,yDAAN,uDAiC2BG,eAtBnB,SAAAR,GAAW,8CAAI,WAAOC,EAAUQ,GAAjB,qBAAAP,EAAA,2DAGhCO,IADaC,EAFmB,EAElCC,KAAQvB,MAF0B,wDASpCA,EAAUsB,GAEVT,EAAShB,EAAYR,yBAXe,kBAcXgB,IAAMmB,IAAI,kBAdC,gBAc1BR,EAd0B,EAc1BA,KAERH,EAAShB,EAAYP,sBAAsB0B,IAhBT,kDAkBlCH,EAAShB,EAAYN,oBAAoB,KAAM0B,UAlBb,0DAAJ,0DC7CnB,GACbQ,mBALyB,SAAAC,GAAK,OAAIA,EAAMH,KAAKpB,iBAM7CwB,YAJkB,SAAAD,GAAK,OAAIA,EAAMH,KAAK5B,KAAKF,Q,4PCwB9BmC,eAJS,SAAAF,GAAK,MAAK,CAChCvB,gBAAiB0B,IAAcJ,mBAAmBC,MAGrCE,EAlBM,SAAC,GAAD,IACRE,EADQ,EACnBC,UACA5B,EAFmB,EAEnBA,gBACA6B,EAHmB,EAGnBA,WACGC,EAJgB,wBAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXhC,EAAkB,cAAC2B,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUC,GAAIJ,W,+CCalDJ,eAJS,SAAAF,GAAK,MAAK,CAChCvB,gBAAiB0B,IAAcJ,mBAAmBC,MAGrCE,EAtBK,SAAC,GAAD,IACPE,EADO,EAClBC,UACA5B,EAFkB,EAElBA,gBACA6B,EAHkB,EAGlBA,WACGC,EAJe,wBAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACXhC,GAAmB8B,EAAWI,WAC5B,cAAC,IAAD,CAAUD,GAAIJ,IAEd,cAACF,EAAD,eAAeK,W,iBChBRG,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,iBCyBxDX,eAJS,SAAAF,GAAK,MAAK,CAChCvB,gBAAiB0B,IAAcJ,mBAAmBC,MAGrCE,EAtBI,SAAC,GAAD,IAAEzB,EAAF,EAAEA,gBAAF,OACjB,gCACE,cAAC,IAAD,CAASiC,GAAG,IAAIO,OAAK,EAACH,UAAWC,IAAOG,KAAMC,gBAAiBJ,IAAOK,WAAtE,kBAGC3C,GACD,cAAC,IAAD,CACEiC,GAAG,YACHO,OAAK,EACLH,UAAWC,IAAOG,KAClBC,gBAAiBJ,IAAOK,WAJ1B,4BCXW,MAA0B,2C,iBCoBnCC,EAAqB,CACzBC,SAAUC,IAAe9B,QAGZS,eATS,SAAAF,GAAK,MAAK,CAChCjC,KAAMoC,IAAcF,YAAYD,GAChCwB,OAAQC,KAO8BJ,EAAzBnB,EAlBE,SAAC,GAAD,IAAGsB,EAAH,EAAGA,OAAQzD,EAAX,EAAWA,KAAMuD,EAAjB,EAAiBA,SAAjB,OACf,sBAAKR,UAAWC,IAAOC,UAAvB,UACE,qBAAKU,IAAKF,EAAQG,IAAI,GAAGC,MAAM,KAAKd,UAAWC,IAAOS,SACtD,uBAAMV,UAAWC,IAAOhD,KAAxB,sBAAwCA,KACxC,wBAAQ+C,UAAWC,IAAOc,OAAQC,KAAK,SAASC,QAAST,EAAzD,0B,iBCcWU,EArBC,kBACd,gCACE,cAAC,IAAD,CACEtB,GAAG,YACHO,OAAK,EACLH,UAAWC,IAAOG,KAClBC,gBAAiBJ,IAAOK,WAJ1B,sBAQA,cAAC,IAAD,CACEV,GAAG,SACHO,OAAK,EACLH,UAAWC,IAAOG,KAClBC,gBAAiBJ,IAAOK,WAJ1B,uB,iBCKWlB,eAJS,SAAAF,GAAK,MAAK,CAChCvB,gBAAiB0B,IAAcJ,mBAAmBC,MAGrCE,EAXA,SAAC,GAAD,IAAGzB,EAAH,EAAGA,gBAAH,OACb,yBAAQqC,UAAWmB,IAAMC,OAAzB,UACE,cAAC,EAAD,IACCzD,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,UCEhC0D,EAAWC,gBAAK,kBACpB,iCAEIC,EAAeD,gBAAK,kBACxB,iCAEIE,EAAeF,gBAAK,kBACxB,iCAEIG,EAAYH,gBAAK,kBACrB,iCAGII,E,uKACJ,WACEC,KAAKhC,MAAMiC,qB,oBAGb,WACE,OACE,eAAC,EAAD,WACE,cAAC,WAAD,CAAUC,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,cAAC,EAAD,MAEF,cAAC,WAAD,CAAUD,SAAU,cAACC,EAAA,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAa3B,OAAK,EAAC4B,KAAK,IAAIxC,UAAW8B,IACvC,cAAC,EAAD,CACEU,KAAK,YACLlC,YAAU,EACVL,WAAW,YACXD,UAAWiC,IAEb,cAAC,EAAD,CACEO,KAAK,SACLlC,YAAU,EACVL,WAAW,YACXD,UAAWkC,IAEb,cAAC,EAAD,CACEM,KAAK,YACLvC,WAAW,SACXD,UAAWgC,gB,GA7BPjC,aAsCZiB,EAAqB,CACzBqB,iBAAkBnB,IAAe7B,gBAGpBQ,cAAQ,KAAMmB,EAAdnB,CAAkCsC,G,4FC/D3CM,GACM,GADNA,GAEI,GAFJA,IAGK,EAHLA,GAIG,KAGHC,GAAQ7E,YAAc4E,IAAD,oBACxBE,KAAgBC,sBAAuB,SAAC7E,EAAD,YAAMC,WADrB,eAExB2E,KAAgBE,mBAAoB,SAAClD,EAAD,OAAU3B,EAAV,EAAUA,QAAV,4BAA4B2B,GAA5B,CAAmC3B,OAF/C,eAGxB2E,KAAgBG,sBAAuB,SAACnD,EAAD,OAAU3B,EAAV,EAAUA,QAAV,OACtC2B,EAAMoD,QAAO,qBAAGC,KAAgBhF,QAJT,IAOrB+E,GAASlF,YAAc4E,GAAD,gBACzBE,KAAgBM,cAAe,SAAClF,EAAD,YAAMC,YAGlCkF,GAAU,SAACnF,EAAD,YAAMC,SAEhBG,GAAQN,YAAc4E,IAAD,oBACxBE,KAAgBQ,mBAAqBD,IADb,eAExBP,KAAgBS,gBAAkBF,IAFV,eAGxBP,KAAgBU,mBAAqBH,IAHb,eAIxBP,KAAgBW,YAAa,kBAAM,QAJX,IAOrBC,GAAU1F,YAAc4E,IAAD,oBAC1BE,KAAgBa,sBAAuB,kBAAM,KADnB,eAE1Bb,KAAgBC,sBAAuB,kBAAM,KAFnB,eAG1BD,KAAgBQ,oBAAqB,kBAAM,KAHjB,eAI1BR,KAAgBc,mBAAoB,kBAAM,KAJhB,eAK1Bd,KAAgBE,mBAAoB,kBAAM,KALhB,eAM1BF,KAAgBS,iBAAkB,kBAAM,KANd,eAO1BT,KAAgBe,sBAAuB,kBAAM,KAPnB,eAQ1Bf,KAAgBG,sBAAuB,kBAAM,KARnB,eAS1BH,KAAgBU,oBAAqB,kBAAM,KATjB,IAYdhF,eAAgB,CAC7BqE,SACAK,UACAQ,WACApF,W,4BCxBIwF,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHhD,CAMdC,OAGIC,GAAoB,CACxBC,IAAK,OACLC,aACAC,UAAW,CAAC,UAGRC,GAAcrG,YAAgB,CAClCmB,KAAMmF,aAAeL,GAAmBM,KACxCC,SAAUC,KAGNC,GAAQC,YAAe,CAC3BC,QAASP,GACTf,cACAuB,UAAUC,IAKG,IAAEJ,SAAOK,UAFNC,aAAaN,KCvC/BO,IAASnF,OACP,cAAC,IAAMoF,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAMA,MAAvB,SACE,cAAC,IAAD,CAAaxB,QAAS,KAAM6B,UAAWL,GAAMK,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRI,SAASC,eAAe,U,mBCnB1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,iC,mBCA/DD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,OAAS,yBAAyB,OAAS,yBAAyB,KAAO,yB,mBCArID,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,8B,gCCD5D,6CAeiBC,IAZF,WACX,OACE,cAAC,IAAD,CACEnF,UAAWC,IAAO6B,OAClBd,KAAK,OACLoE,MAAM,UACNC,OAAQ,IACRvE,MAAO,IACPwE,QAAS,Q,gCCXjB,YAIMC,EAAkB,SAAArG,GAAK,OAAIA,EAAMkF,SAASnC,OAE1CuD,EAAY,SAAAtG,GAAK,OAAIA,EAAMkF,SAAS9B,QAapCmD,EAAqBC,YACzB,CAACH,EAAiBC,IAClB,SAACpB,EAAU9B,GACT,IAAMqD,EAAmBrD,EAAOsD,cAChC,OAAOxB,EAAS9B,QAAO,SAAAuD,GAAO,OAC5BA,EAAQ5I,KAAK2I,cAAcE,SAASH,SAK3B,KACbI,WA5BiB,SAAA7G,GAAK,OAAIA,EAAMkF,SAAStB,SA6BzCyC,kBACAC,YACAC,uB,oFCEa,KAAEO,cAhCK,yDAAM,WAAM3H,GAAN,iBAAAC,EAAA,6DAC1BD,EAAS6D,IAAgBa,wBADC,kBAIDlF,IAAMmB,IAAI,aAJT,gBAIhBR,EAJgB,EAIhBA,KACRH,EAAS6D,IAAgBC,qBAAqB3D,IALtB,gDAOxBH,EAAS6D,IAAgBQ,mBAAmB,KAAMjE,UAP1B,yDAAN,uDAgCUwH,WArBb,SAAChJ,EAAMiJ,GAAP,8CAAkB,WAAM7H,GAAN,mBAAAC,EAAA,6DAC7BuH,EAAU,CAAE5I,OAAMiJ,UACxB7H,EAAS6D,IAAgBc,qBAFU,kBAIVnF,IAAMU,KAAK,YAAasH,GAJd,gBAIzBrH,EAJyB,EAIzBA,KACRH,EAAS6D,IAAgBE,kBAAkB5D,IALV,kDAOjCH,EAAS6D,IAAgBS,gBAAgB,KAAMlE,UAPd,0DAAlB,uDAqByB0H,cAVtB,SAAAC,GAAS,8CAAI,WAAM/H,GAAN,SAAAC,EAAA,6DACjCD,EAAS6D,IAAgBe,wBADQ,kBAGzBpF,IAAMwI,OAAN,oBAA0BD,IAHD,OAI/B/H,EAAS6D,IAAgBG,qBAAqB+D,IAJf,gDAM/B/H,EAAS6D,IAAgBU,mBAAmB,KAAMnE,UANnB,yDAAJ,yD,+BCzB/B,WAEMsE,EAAuB3G,YAC3B,iCAEI+F,EAAuB/F,YAC3B,iCAEIsG,EAAqBtG,YAAa,+BAElC4G,EAAoB5G,YAAa,8BACjCgG,EAAoBhG,YAAa,8BACjCuG,EAAkBvG,YAAa,4BAE/B6G,EAAuB7G,YAC3B,iCAEIiG,EAAuBjG,YAC3B,iCAEIwG,EAAqBxG,YAAa,+BAElCoG,EAAepG,YAAa,yBAC5ByG,EAAazG,YAAa,uBAEjB,KACb2G,uBACAZ,uBACAO,qBACAM,oBACAZ,oBACAO,kBACAM,uBACAZ,uBACAO,qBACAJ,eACAK,e,mBCnCFoC,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,wB","file":"static/js/main.4047add6.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\n//Set default axios authorization header\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n  try {\n    const { data } = await axios.post('/users/signup', credentials);\n    token.set(data.token);\n    dispatch(authActions.registerSuccess(data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const { data } = await axios.post('/users/login', credentials);\n    token.set(data.token);\n    dispatch(authActions.loginSuccess(data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = credentials => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  \n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const { data } = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import styles from './Container.module.css';\n\nconst Container = ({ children }) => <div className={styles.container}>{children}</div>;\n\nexport default Container;","import { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport styles from './Navigation.module.css';\n\nconst Navigation = ({isAuthenticated}) => (\n  <nav>\n    <NavLink to=\"/\" exact className={styles.link} activeClassName={styles.activeLink}>\n      Home\n    </NavLink>\n    {isAuthenticated && (\n    <NavLink\n      to=\"/contacts\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Contacts\n    </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.a0316acc.svg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.svg';\nimport styles from './UserMenu.module.css';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" className={styles.avatar} />\n    <span className={styles.name}>Welcome, {name}</span>\n    <button className={styles.button} type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import { NavLink } from 'react-router-dom';\nimport styles from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Register\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import { connect } from 'react-redux';\nimport Navigation from '../Navigation/Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport { authSelectors } from '../../redux/auth';\nimport style from './AppBar.module.css';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={style.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);","import { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport Loader from './components/Loader/Loader';\n// Routes\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n// Components\nimport Container from './components/Container';\nimport AppBar from './components/AppBar/AppBar';\n// Views\nconst HomeView = lazy(() =>\n  import('./views/HomeView' /* webpackChunkName: \"Home\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"Contacts\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"Register\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"Login\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  render() {\n    return (\n      <Container>\n        <Suspense fallback={<Loader />}>\n          <AppBar />\n        </Suspense>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsView}\n            />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contactsActions from './contacts-actions';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n  loading: false,\n  error: null,\n};\n\nconst items = createReducer(initialState.contacts, {\n  [contactsActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [contactsActions.addContactSuccess]: (state, { payload }) => [...state, payload],\n  [contactsActions.deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(initialState.filter, {\n  [contactsActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst onError = (_, { payload }) => payload;\n\nconst error = createReducer(initialState.error, {\n  [contactsActions.fetchContactsError]: onError,\n  [contactsActions.addContactError]: onError,\n  [contactsActions.deleteContactError]: onError,\n  [contactsActions.clearError]: () => null,\n});\n\nconst loading = createReducer(initialState.loading, {\n  [contactsActions.fetchContactsRequest]: () => true,\n  [contactsActions.fetchContactsSuccess]: () => false,\n  [contactsActions.fetchContactsError]: () => false,\n  [contactsActions.addContactRequest]: () => true,\n  [contactsActions.addContactSuccess]: () => false,\n  [contactsActions.addContactError]: () => false,\n  [contactsActions.deleteContactRequest]: () => true,\n  [contactsActions.deleteContactSuccess]: () => false,\n  [contactsActions.deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\n\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\nimport logger from 'redux-logger';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst rootReducer = combineReducers({\n  auth: persistReducer(authPersistConfig, authReducer),\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './styles/style.scss';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__K-jId\",\"activeLink\":\"Navigation_activeLink__2pV5y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__HTo61\",\"avatar\":\"UserMenu_avatar__2rAtS\",\"button\":\"UserMenu_button__60696\",\"name\":\"UserMenu_name__164s2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__2KIRL\",\"activeLink\":\"AuthNav_activeLink__BWDrG\"};","import Loader from 'react-loader-spinner';\nimport styles from './Loader.module.css';\n\nconst loader = () => {\n    return (\n      <Loader\n        className={styles.Loader}\n        type=\"Oval\"\n        color=\"#CB2400\"\n        height={100}\n        width={100}\n        timeout={2000}\n      />\n    );\n  };\n  export default loader;","import { createSelector } from 'reselect';\n\nconst getLoading = state => state.contacts.loading;\n\nconst getContactItems = state => state.contacts.items;\n\nconst getFilter = state => state.contacts.filter;\n\n// const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const contacts = getContactItems(state);\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n//!!!Мемоизация — сохранение (кеширование) результатов выполнения функций для предотвращения повторных вычислений.\n\nconst getVisibleContacts = createSelector(\n  [getContactItems, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getContactItems,\n  getFilter,\n  getVisibleContacts,\n};\n","import axios from 'axios';\nimport contactsActions from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(contactsActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error.message));\n  }\n};\n\nconst addContact = (name, number) => async dispatch => {\n  const contact = { name, number };\n  dispatch(contactsActions.addContactRequest());\n  try {\n    const { data } = await axios.post('/contacts', contact);\n    dispatch(contactsActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(contactsActions.addContactError(error.message));\n  }\n};\n\nconst deleteContact = contactId => async dispatch => {\n  dispatch(contactsActions.deleteContactRequest());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(contactsActions.deleteContactSuccess(contactId));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactError(error.message));\n  }\n};\n\nexport default { fetchContacts, addContact, deleteContact };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nconst fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nconst deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst changeFilter = createAction('contacts/changeFilter');\nconst clearError = createAction('contacts/clearError');\n\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n  clearError,\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__x1IyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2vV3o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__lumHT\",\"link\":\"AppBar_link__aI3Jf\"};"],"sourceRoot":""}